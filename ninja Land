int dfs(TreeNode<int>*root,int &sum){
    //edge case
    if(root == NULL){
        return 1;
    }
    if(root->children.size()==0){
        return 0;
    }

    vector<int>array;
    for(int i =0;i<root->children.size();i++){
        int left = dfs(root->children[i],sum);
        array.push_back(left);
    }

    for(int i =0;i<array.size();i++){
        if(array[i]==0){
            sum++;
            return 2;
        }
    }
    for(int i =0;i<array.size();i++){
        if(array[i]==2){
            // sum++;
            return 1;
        }
    }
    for(int i =0;i<array.size();i++){
        if(array[i]==1){
            // sum++;
            return 0;
        }
    }
}

int minLandingCover(TreeNode<int>* root) {
    // Write your code here
    int sum = 0;
    if(dfs(root,sum)==0){
        sum++;
    }
    return sum;
}
